
% In this section you may modify the mesh in any way that does not
% alter the set of nodes.

    if (Steps(m)==0) && m.globalDynamicProps.doinit
        % Put any code here that should only be performed at the start of
        % the simulation.
        
        % Ad/Ab patterning at the first beginning
        switch OPTIONS.modelname
        
            case 'MODEL2'
                
                % Removal of AD 
                id_adaxial_p(:) = 0;  % factor AD
                id_abaxial_p(:) = 1;  % factor AB 
                
%                 % Removal of AB
%                 id_adaxial_p(:) = 1;  % factor AD
%                 id_abaxial_p(:) = 0;  % factor AB 
                
            otherwise
                
                id_adaxial_p( m.FEnodes(:,1) < 0 ) = 1;  % factor AD 
                id_abaxial_p( m.FEnodes(:,1) > 0 ) = 1;  % factor AB
                
        end
        
        
        
        s_abaxial_p = id_abaxial_p;
        m.morphogenclamp((id_abaxial_p == 1), s_abaxial_i) = 1;
        m = leaf_mgen_conductivity( m, 'S_ABAXIAL', 0.05 );      % diffusion constant of S_ABAXIAL
        m = leaf_mgen_absorption( m, 'S_ABAXIAL', 0.01 );        % decay rate of S_ABAXIAL
        
        s_adaxial_p = id_adaxial_p;
        m.morphogenclamp((id_adaxial_p == 1), s_adaxial_i ) = 1;
        m = leaf_mgen_conductivity( m, 'S_ADAXIAL', 0.05 );      % diffusion constant of S_ADAXIAL
        m = leaf_mgen_absorption( m, 'S_ADAXIAL', 0.01 );        % decay rate of S_ADAXIAL 
        
        id_midplane_p((s_adaxial_p < 0.8) & (s_abaxial_p < 0.8)) = 1;  % factor MIP
        
        % Surface of the primordium
        RADII_CENTER = sqrt(m.FEnodes(:,1).^2 + m.FEnodes(:,2).^2 + m.FEnodes(:,3).^2);
        id_surface_p((RADII_CENTER > 0.95) & (~id_midplane_p)) = 1;  % factor SURF
        
        % Central core of the primordium
        RADII_CORE = sqrt(m.FEnodes(:,1).^2 + m.FEnodes(:,2).^2);
        id_core_p((RADII_CORE<=0.05)&(~id_adaxial_p)) = 1;  % factor CORE
        
        % For repatterning
        id_adaxial2_p((m.FEnodes(:,1)<0)&((m.FEnodes(:,3)*2+m.FEnodes(:,1))>0.75))=1;
        id_abaxial2_p((m.FEnodes(:,1)>0)|((m.FEnodes(:,3)*2+m.FEnodes(:,1))<0.45))=1;
        
        s_abaxial2_p = id_abaxial2_p;
        m.morphogenclamp((id_abaxial2_p == 1), s_abaxial2_i) = 1;
        m = leaf_mgen_conductivity( m, 'S_ABAXIAL2', 0.05 );      % diffusion constant of S_ABAXIAL
        m = leaf_mgen_absorption( m, 'S_ABAXIAL2', 0.01 );        % decay rate of S_ABAXIAL
        
        s_adaxial2_p = id_adaxial2_p;
        m.morphogenclamp((id_adaxial2_p == 1), s_adaxial2_i ) = 1;
        m = leaf_mgen_conductivity( m, 'S_ADAXIAL2', 0.05 );      % diffusion constant of S_ADAXIAL
        m = leaf_mgen_absorption( m, 'S_ADAXIAL2', 0.01 );        % decay rate of S_ADAXIAL

        id_midplane2_p((s_adaxial2_p < 0.8) & (s_abaxial2_p < 0.8)) = 1;
        id_surface2_p((RADII_CENTER > 0.95) & (~id_midplane2_p)) = 1;

        tip = [ 0, 0, 1 ];
        RADII_TIP = sqrt((m.FEnodes(:,1) - tip(1)).^2 +...
                         (m.FEnodes(:,2) - tip(2)).^2 +...
                         (m.FEnodes(:,3) - tip(3)).^2);
        id_base_p( m.FEnodes(:,3) == min(m.FEnodes(:,3)) ) = 1;  % factor BASE  
        id_tip_p((abs(m.FEnodes(:,1)) < 0.01) &...
                  (abs(m.FEnodes(:,2)) < 0.9 ) &...
                  (RADII_CENTER > 0.95)) = 1;
        id_tip_p = id_tip_p & id_midplane_p;  % factor TIP
        
        id_tip2_p((RADII_CENTER > 0.95) &...
                   (abs(m.FEnodes(:,2)) < 0.6) &...   % change from 0.01 to 0.6 
                   (m.FEnodes(:,1) < 0)) = 1;
        id_tip2_p = id_tip2_p & id_midplane2_p;   
        
        s_lip_p = id_tip2_p;
        m.morphogenclamp((id_tip2_p == 1), s_lip_i ) = 1;
        m = leaf_mgen_conductivity( m, 'S_LIP', 0.01 );  
        
        id_sinus_p(RADII_TIP < 0.2) = 1;  % factor SINUS
        
%         % NOT USE
%         id_fold_p((abs(m.FEnodes(:,1)-0.21)<0.06)&(m.FEnodes(:,3)>0.5))=1;
        % factor MID_VEN and MID_DOR
        id_mid_ven_p((abs(m.FEnodes(:,2))<0.05)&(m.FEnodes(:,1)<-0.5)&(m.FEnodes(:,3) > 0.28))=1;
        s_mid_ven_p = id_mid_ven_p;
        m.morphogenclamp((id_mid_ven_p == 1), s_mid_ven_i) = 1;
        m = leaf_mgen_conductivity( m, 'S_MID_VEN', 0.02 );      
        m = leaf_mgen_absorption( m, 'S_MID_VEN', 0.001 );  
        
        id_mid_dor_p(((abs(m.FEnodes(:,2)+0.4)<0.05)|(abs(m.FEnodes(:,2)-0.4))<0.05)&...
                     (m.FEnodes(:,1)<0.6)&(m.FEnodes(:,1)>-0.2)&(m.FEnodes(:,3) > 0.28))=1;
        
        s_mid_dor_p = id_mid_dor_p;
        m.morphogenclamp((id_mid_dor_p == 1), s_mid_dor_i) = 1;
        m = leaf_mgen_conductivity( m, 'S_MID_DOR', 0.01 );      
        m = leaf_mgen_absorption( m, 'S_MID_DOR', 0.001 ); 
        
        % along with the repatterning of adaxial domain
        % alternative stalk domain [0.38, 0.48, 0.58, 0.68, 0.78]
        id_stalk_p(m.FEnodes(:,3) < 0.28) = 1;   % factor STK
        id_blade_p(m.FEnodes(:,3) > 0.28) = 1;  % factor BLA
              
        m = leaf_fix_vertex( m, 'vertex', find(m.FEnodes(:,3) == min(m.FEnodes(:,3))), 'dfs', 'z');
        
    end
    
    % @@ PRN Polarity Regulatory Network
    % Pre-growth stage for generating the polarity fields  
    % The orthoplanar polarity field was established by a diffusible morphogen POL
    % generated by a source and removed at a sink    
    % The proximodistal polarity field was established by a diffusible morphogen POL2
    % generated by a source and removed at a sink
    
    % @@ KRN Growth Rate Regulatory Network
    % kpar: growth rate paralle to the orthoplanar polarity field (Kop in the text)
    % kpar2: growth rate paralle to the proximodistal polarity field (Kpd in the text)
    % kper: growth rate perpendicular to both polarity fields (Kper in the text)
    
    switch OPTIONS.modelname
        
        case 'MODEL1'  % Wildtype/Mock
            
            if (realtime <= 3 - 0.0001)
                pol_p=0;
                pol2_p = -m.FEnodes(:,3);
        
                kpar_p = 0;
                kper_p = 0;
                kpar2_p = 0.5 * id_base_p;   % for generating an elongated base part for primordium
            end

            if (realtime <= 1 - 0.001)  
        
               m = leaf_plotoptions( m, 'morphogen', { 'id_adaxial', 'id_abaxial', 'id_midplane' });
               m = leaf_plotpriority( m, { 'id_adaxial', 'id_abaxial', 'id_midplane' },...
                                  [ 1, 1, 2 ], [ 0.5, 0.5, 0.5 ], 'type', 'morphogen' );
        
               % The orthoplanar polarity field was established by a diffusible morphogen POL
               % generated by a source at the surface and removed at a sink at the midplane and central core       
               pol_p = id_surface_p - id_midplane_p - id_core_p;   
               m.morphogenclamp((id_surface_p==1)|(id_midplane_p==1)|(id_core_p==1), pol_i) = 1;
               m = leaf_mgen_conductivity( m, 'POL', 0.1 );     % diffusion constant of POL
               m = leaf_mgen_absorption( m, 'POL', 0.01 );      % decay rate of POL
        
               % The proximodistal polarity field was established by a diffusible morphogen POL2
               % generated by a source at the base and removed at a sink at the tip
               pol2_p = id_base_p - id_tip_p;  
               m.morphogenclamp((id_base_p == 1)|(id_tip_p == 1), pol2_i) = 1;
               m = leaf_mgen_conductivity( m, 'POL2', 0.1 );    % diffusion constant of POL2
               m = leaf_mgen_absorption( m, 'POL2', 0.01 );     % decay rate of POL2

            end
            
            % Growth phases
            % Phase I 
            if (realtime > 1 - 0.001) && (realtime <= 4 - 0.001)

               kpar2_p = 0.25 * pro(0.8,id_stalk_p);
               kpar_p = 0.001;
               kper_p = 0.15 * inh(10,id_stalk_p);

            end
            
            % Repatterning stage, no growth
            if (realtime > 4 - 0.001) && (realtime <= 5 - 0.001)
        
               m = leaf_plotoptions( m, 'morphogen', { 'id_adaxial2', 'id_abaxial2', 'id_midplane2' });
               m = leaf_plotpriority( m, { 'id_adaxial2', 'id_abaxial2', 'id_midplane2' },...
                                    [ 1, 1, 2 ], [ 0.5, 0.5, 0.5 ], 'type', 'morphogen' );

               pol_p = id_surface2_p - id_midplane2_p - id_core_p; 
               m.morphogenclamp((id_surface2_p==1)|(id_midplane2_p==1)|(id_core_p==1), pol_i) = 1;
               m = leaf_mgen_conductivity( m, 'POL', 0.1 );     % diffusion constant of POL
               m = leaf_mgen_absorption( m, 'POL', 0.01 );      % decay rate of POL

               pol2_p = id_base_p - id_tip_p - id_tip2_p;
               m.morphogenclamp((id_base_p == 1)|(id_tip_p == 1)|(id_tip2_p == 1), pol2_i) = 1;
               m = leaf_mgen_conductivity( m, 'POL2', 0.1 );    % diffusion constant of POL2
               m = leaf_mgen_absorption( m, 'POL2', 0.01 );     % decay rate of POL2
        
               kpar2_p = 0;
               kpar_p = 0;
               kper_p = 0;
        
            end
            
            % Phase II 
            if (realtime > 5 - 0.001) && (realtime <= 8 - 0.001)

               kpar2_p = 0.25 * pro(0.5,s_mid_ven_p).* pro(0.8,s_mid_dor_p).*pro(0.8,id_stalk_p);
               kpar_p = 0.01;
               kper_p = 0.15 * inh(10,id_stalk_p);

            end
    
            % Phase3 III
            if (realtime > 8 - 0.001) && (realtime <= 11 - 0.001)

               kpar2_p = 0.25 * inh(10,id_sinus_p).*pro(1.0,s_mid_ven_p).* pro(1.2,s_mid_dor_p).*pro(0.3,id_stalk_p);
               kpar_p = 0.01;
               kper_p = 0.15 * inh(10,id_sinus_p) .* inh(10,id_stalk_p);

            end
    
            if (realtime > 11 - 0.001) && (realtime <= 20 - 0.001)

               kpar2_p = 0.2 * inh(10,id_sinus_p).*pro(1.0,s_mid_ven_p).* pro(1.2,s_mid_dor_p).*pro(0.3,id_stalk_p);
               kpar_p = 0.01;
               kper_p = 0.2 * inh(10,id_sinus_p) .* inh(10,id_stalk_p).*pro(1.0,s_mid_ven_p);
 
            end
            
        case 'MODEL2'  % AD/AB removed at the beginning
            
            if (realtime <= 1 - 0.001)  
        
               m = leaf_plotoptions( m, 'morphogen', { 'id_adaxial', 'id_abaxial', 'id_midplane' });
               m = leaf_plotpriority( m, { 'id_adaxial', 'id_abaxial', 'id_midplane' },...
                                    [ 1, 1, 2 ], [ 0.5, 0.5, 0.5 ], 'type', 'morphogen' );
        
               pol_p = id_surface_p - id_core_p;
               m.morphogenclamp((id_surface_p==1)|(id_core_p==1), pol_i) = 1;
               m = leaf_mgen_conductivity( m, 'POL', 0.1 );     % diffusion constant of POL
               m = leaf_mgen_absorption( m, 'POL', 0.01 );      % decay rate of POL
        
               pol2_p = id_base_p - id_tip_p; 
               m.morphogenclamp((id_base_p == 1)|(id_tip_p == 1), pol2_i) = 1;
               m = leaf_mgen_conductivity( m, 'POL2', 0.1 );         % diffusion constant of POL2
               m = leaf_mgen_absorption( m, 'POL2', 0.01 );          % decay rate of POL2

            end
            
            if (realtime > 1 - 0.001) && (realtime <= 20 - 0.001)

               kpar2_p = 0.25 * pro(0.8,id_stalk_p);
               kpar_p = 0.001;
               kper_p = 0.15;

            end
            
        case 'MODEL3'  % AD/AB removed at Phase I
        case 'MODEL4'  % AD/AB removed at Phase II
        case 'MODEL5'  % AD/AB removed at Phase III
            

    end